import mysql.connector
import logging
import yaml

# Setup logging
logging.basicConfig(filename='techstack_manager.log', level=logging.ERROR, 
                    format='%(asctime)s %(levelname)s:%(message)s')

def load_config():
    try:
        with open("config.yaml", "r") as config_file:
            return yaml.safe_load(config_file)
    except Exception as e:
        logging.error(f"Error loading config: {e}")
        return None

def connect_db(config):
    try:
        conn = mysql.connector.connect(
            host=config["mysql"]["host"],
            user=config["mysql"]["user"],
            password=config["mysql"]["password"],
            database=config["mysql"]["database"]
        )
        return conn
    except mysql.connector.Error as e:
        logging.error(f"Error connecting to MySQL: {e}")
        return None

def view_techstack(conn):
    try:
        cursor = conn.cursor(dictionary=True)
        cursor.execute("SELECT * FROM techstack")
        results = cursor.fetchall()
        for row in results:
            print(f"ID: {row['id']}, Tech: {row['tech']}")
    except mysql.connector.Error as e:
        logging.error(f"Error viewing techstack: {e}")

def add_tech(conn, tech):
    try:
        cursor = conn.cursor()
        cursor.execute("INSERT INTO techstack (tech) VALUES (%s)", (tech,))
        conn.commit()
        print(f"Added tech: {tech}")
    except mysql.connector.Error as e:
        logging.error(f"Error adding tech: {e}")

def update_tech(conn, tech_id, new_tech):
    try:
        cursor = conn.cursor()
        cursor.execute("UPDATE techstack SET tech = %s WHERE id = %s", (new_tech, tech_id))
        conn.commit()
        print(f"Updated tech ID {tech_id} to {new_tech}")
    except mysql.connector.Error as e:
        logging.error(f"Error updating tech: {e}")

def delete_tech(conn, tech_id):
    try:
        cursor = conn.cursor()
        cursor.execute("DELETE FROM techstack WHERE id = %s", (tech_id,))
        conn.commit()
        print(f"Deleted tech ID {tech_id}")
    except mysql.connector.Error as e:
        logging.error(f"Error deleting tech: {e}")

def main():
    config = load_config()
    if not config:
        logging.error("Config file not found!")
        return

    conn = connect_db(config)
    if not conn:
        return

    while True:
        print("\nTechstack Manager")
        print("1. View techstack")
        print("2. Add tech")
        print("3. Update tech")
        print("4. Delete tech")
        print("5. Exit")
        
        choice = input("Enter your choice: ")
        
        if choice == '1':
            view_techstack(conn)
        elif choice == '2':
            tech = input("Enter tech name to add: ")
            add_tech(conn, tech)
        elif choice == '3':
            tech_id = input("Enter tech ID to update: ")
            new_tech = input("Enter new tech name: ")
            update_tech(conn, tech_id, new_tech)
        elif choice == '4':
            tech_id = input("Enter tech ID to delete: ")
            delete_tech(conn, tech_id)
        elif choice == '5':
            break
        else:
            print("Invalid choice. Please try again.")

    conn.close()

if __name__ == "__main__":
    main()
